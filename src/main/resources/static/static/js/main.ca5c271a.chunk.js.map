{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifer","projectName","description","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","console","log","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullname","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project$","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","projectIdentifier","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","SecureRoute","Boolean","hostname","ReactDOM","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca5c271a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"Are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n// Types for BACKLOG ACTIONS\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifer}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifer}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifer}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifer\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProject }\r\n)(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  // cycle hook\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    console.log(\"projects:\", projects);\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    // post => Login Request\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n\r\n    // store the token in the localStorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n\r\n    // set our token in the header ***\r\n    setJWTToken(token);\r\n\r\n    // decode token on React\r\n    const decoded = jwt_decode(token);\r\n\r\n    // dispatch to our securityReducer\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              {user.fullname}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/register\">\r\n              <i className=\"fas fa-user-circle mr-1\" />\r\n              SIGN UP\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport Proptypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifer: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifer: this.state.projectIdentifer,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"project\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg \", {\r\n                        \"is-invalid\": errors.projectName\r\n                      })}\r\n                      placeholder=\"Project Name\"\r\n                      name=\"projectName\"\r\n                      value={this.state.projectName}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectIdentifer\r\n                      })}\r\n                      placeholder=\"Unique Project ID\"\r\n                      name=\"projectIdentifer\"\r\n                      value={this.state.projectIdentifer}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.projectIdentifer && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifer}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                      })}\r\n                      placeholder=\"Project Description\"\r\n                      name=\"description\"\r\n                      value={this.state.description}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <h6>Start Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"start_date\"\r\n                      value={this.state.start_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n                  <h6>Estimated End Date</h6>\r\n                  <div className=\"form-group\">\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control form-control-lg\"\r\n                      name=\"end_date\"\r\n                      value={this.state.end_date}\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: Proptypes.func.isRequired,\r\n  errors: Proptypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifer !== action.payload\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifer: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifer,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProps.project[0];\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifer,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifer: this.state.projectIdentifer,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifer\"\r\n                    value={this.state.projectIdentifer}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, createProject }\r\n)(UpdateProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n              project_task.projectSequence\r\n            }`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteProjectTask }\r\n)(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      //console.log(tasks[i]);\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  // constructor to handle errors\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  // on change\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  // on submit\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n    };\r\n\r\n    //console.log(newTask);\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addProjectTask }\r\n)(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    //console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, updateProjectTask }\r\n)(UpdateProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start you own\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullname: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullname: this.state.fullname,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullname\r\n                    })}\r\n                    placeholder=\"fullname\"\r\n                    name=\"fullname\"\r\n                    value={this.state.fullname}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullname && (\r\n                    <div className=\"invalid-feedback\">{errors.fullname}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    //handle logout\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            // Public Routes\n          }\n\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {\n            // Private Routes\n          }\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}